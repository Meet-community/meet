{
  "name": "meet",
  "version": "1.0.0",
  "description": "app to find people",
  "main": "index.js",
  "scripts": {
    "prepare": "husky install",
    "server": "npm --prefix ./api run dev",
    "client": "npm --prefix ./frontend run dev",
    "client-windows": "npm --prefix ./frontend run dev-windows",
    "dev": "concurrently --names \"api,frontend\" -c \"green,magenta\" \"npm run server\" \"npm run client\"",
    "dev-windows": "concurrently --names \"api,frontend\" -c \"green,magenta\" \"npm run server\" \"npm run client-windows\"",
    "db-dev": "psql -h ec2-34-248-169-69.eu-west-1.compute.amazonaws.com -p 5432 -d dfe7gbbliok272 -U grhrobkaxdoejz -W",
    "db-production": "psql -h ec2-52-30-159-47.eu-west-1.compute.amazonaws.com -p 5432 -d ddh4g7e295v6im -U rkpttinjufwejf -W",
    "graphql:generate": "graphql-codegen --config graphql-codegen-frontend.yml",
    "lint": "npm --prefix ./api run lint && npm --prefix ./frontend run lint",
    "lint-fix": "npm --prefix ./api run lint-fix && npm --prefix ./frontend run lint-fix",
    "i-all": "npm --prefix ./api i ; npm --prefix ./frontend i",
    "postinstall": "if [ $CLIENT_ENV ]; then npm run postinstall-client; elif [ $SERVER_ENV ]; then npm run postinstall-server; else echo no environment detected, please set CLIENT_ENV or SERVER_ENV; fi",
    "postinstall-client": "cd frontend && npm install && npm run build",
    "postinstall-server": "cd api && npm install && tsc",
    "push-frontend-to-heroku": "git push heroku-frontend master",
    "push-backend-to-heroku": "git push heroku-backend master",
    "push-frontend-to-heroku-dev": "git push heroku-frontend-dev master",
    "push-backend-to-heroku-dev": "git push heroku-backend-dev master",
    "test-api": "npm --prefix ./api run lint-ts && npm --prefix ./api run lint",
    "test-front": "npm --prefix ./frontend run lint-ts && npm --prefix ./frontend run lint",
    "test": "npm run test-api && npm run test-front",
    "deploy-production": "npm run test && npm run heroku-remote && npm run push-frontend-to-heroku && npm run push-backend-to-heroku",
    "deploy-dev": "npm run test && heroku-remote-dev && npm run push-frontend-to-heroku-dev && npm run push-backend-to-heroku-dev",
    "heroku-remote": "heroku git:remote -a meet-up-to-easy-backend --remote heroku-backend && heroku git:remote -a meet-up-to-easy --remote heroku-frontend",
    "heroku-remote-dev": "heroku git:remote -a dev-meet-up-to-easy-backend --remote heroku-backend-dev && heroku git:remote -a dev-meet-up-to-easy --remote heroku-frontend-dev",
    "cli-front-dev": "heroku logs --tail --remote heroku-frontend-dev",
    "cli-api-dev": "heroku logs --tail --remote heroku-backend-dev",
    "cli-front-prod": "heroku logs --tail --remote heroku-frontend",
    "cli-api-prod": "heroku logs --tail --remote heroku-backend"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Ihor-Karpyn/meet.git"
  },
  "author": "Ihot Karpyn",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/Ihor-Karpyn/meet/issues"
  },
  "homepage": "https://github.com/Ihor-Karpyn/meet#readme",
  "devDependencies": {
    "@graphql-codegen/cli": "2.9.1",
    "@graphql-codegen/introspection": "2.2.0",
    "@graphql-codegen/typescript": "2.7.2",
    "@graphql-codegen/typescript-operations": "2.5.2",
    "@graphql-codegen/typescript-react-apollo": "3.3.2",
    "concurrently": "^7.3.0",
    "husky": "^8.0.1"
  }
}
